# Choose between www and non-www, listen on the *wrong* one and redirect to
# the right one -- http://wiki.nginx.org/Pitfalls#Server_Name
#
server {
  listen [::]:80;
  listen 80;

  # listen on both hosts
  server_name thiru.in thiru.in www.thiru.in;

  include common/directive-only/ssl.conf;

  # and redirect to the https host (declared below)
  # avoiding http://www -> https://www -> https:// chain.
  return 301 https://thiru.in$request_uri;
}

server {
  listen [::]:443 ssl spdy;
  listen 443 ssl spdy;

  # listen on the wrong host
  server_name www.thiru.in;

  include common/directive-only/ssl.conf;

  # and redirect to the non-www host (declared below)
  return 301 https://thiru.in$request_uri;
}

server {
  listen [::]:443 ssl spdy;
  listen 443 ssl spdy;

  # The host name to respond to
  server_name thiru.in;

  include common/directive-only/ssl.conf;

  # Path for static files
  root /www/sites/thiru.in;

  error_log  /www/logs/nginx/error-thiru.log crit;
  index index.php index.html
  #Specify a charset
  charset utf-8;

  # Custom 404 page
  error_page 404 /404.html;

  # Include the basic h5bp config set
  #include common/basic.conf;
  include common/php-cgi.conf;
  #include common/w3tc.conf;
  pagespeed MapOriginDomain "http://localhost" "https://thiru.in";
  pagespeed LoadFromFile "https://thiru.in" "/www/sites/thiru.in/";

  location /jm {try_files $uri $uri/ @jm;}
  location @jm {rewrite ^/jm(.+)$ /jm/index.php?p=$1 last;}

  location /vm {try_files $uri $uri/ @vm;}
  location @vm {rewrite ^/vm(.+)$ /vm/index.php?p=$1 last;}
  
  location /tmp {try_files $uri $uri/ @tmp;}
  location @tmp {rewrite ^/tmp(.+)$ /tmp/index.php?p=$1 last;}
  
  location / {
	set $cache_uri $request_uri;
	try_files $uri $uri/ /wp-content/cache/page_enhanced/${host}${cache_uri}_index_ssl.html /index.php?q=$request_uri;
  }
}
